---
# tasks file for cloudflared
- name: Catch error block
  block:
    - name: Define required variables
      set_fact:
        daemon_location: "{{ install_target_dir }}/cloudflared"
        cf_binary_filename: "{{ cf_binaries[ansible_machine].filename_tgz }}"
        systemd_filename: "cloudflared"

    - name: Populate service facts
      service_facts:

    - name: Create cloudflared user
      user:
        name: cloudflared
        system: true
        state: present
        create_home: false
        groups: adm
        append: true
        shell: /usr/sbin/nologin
      when: not install_only

    - name: Download and install cloudflared
      include_tasks: install.yml
      when: install

    - name: Configuration tasks
      block:
      - name: Ensure config directory present
        file:
          path: "{{ config_dir }}"
          state: directory
          owner: cloudflared
          group: cloudflared
          mode: 0644
  
      - name: Ensure credentials directory present
        file:
          path: "{{ config_dir }}/.credentials"
          state: directory
          owner: cloudflared
          group: cloudflared
          mode: 0644

      - name: Run tunnel create
        command:
          cmd: cloudflared tunnel create {{ argo_hostname }}
          chdir: "{{ config_dir }}/.credentials"
          creates: "{{ config_dir }}/.credentials/*.json"
        register: result
        changed_when: result.rc == 0

      - name: Configure tunnel
        include_tasks: configure-tunnel.yml

      - name: Configure cloudflared
        include_tasks: configure.yml
      when: not install_only

    - name: Create DNS record
      command: "cloudflared tunnel route dns {{ argo_hostname }}-{{ device }} {{ item.key }}-{{ device }}-{{ argo_hostname}}.cstunnel.xyz"
      register: cloudflared_dns
      loop: "{{ ingress_rules | dict2items }}"

    - name: debug dns request
      debug:
        var: cloudflared_dns

    - name: Remove cert
      file:
        path: "{{ config_dir }}/{{ cert_name }}"
        state: absent
  rescue:
    - name: Remove cert if errors
      file:
        path: "{{ config_dir }}/{{ cert_name }}"
        state: absent